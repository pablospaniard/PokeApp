// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PokemonSummary_snapshot_1 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PokemonSummary
    details={Object {}}
    loading={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(CardContent)
        className={undefined}
>
        <WithStyles(Typography)
                style={
                        Object {
                                "margin": 10,
                              }
                }
                variant="subheading"
        >
                 Height: undefined, Weight: undefined
        </WithStyles(Typography)>
        <WithStyles(Typography)
                style={
                        Object {
                                "margin": 10,
                              }
                }
                variant="subheading"
        >
                 Base experience: undefined
        </WithStyles(Typography)>
</WithStyles(CardContent)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            style={
                        Object {
                                    "margin": 10,
                                  }
            }
            variant="subheading"
>
             Height: undefined, Weight: undefined
</WithStyles(Typography)>,
          <WithStyles(Typography)
            style={
                        Object {
                                    "margin": 10,
                                  }
            }
            variant="subheading"
>
             Base experience: undefined
</WithStyles(Typography)>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Height: undefined, Weight: undefined",
            "style": Object {
              "margin": 10,
            },
            "variant": "subheading",
          },
          "ref": null,
          "rendered": " Height: undefined, Weight: undefined",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Base experience: undefined",
            "style": Object {
              "margin": 10,
            },
            "variant": "subheading",
          },
          "ref": null,
          "rendered": " Base experience: undefined",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(CardContent)
          className={undefined}
>
          <WithStyles(Typography)
                    style={
                              Object {
                                        "margin": 10,
                                      }
                    }
                    variant="subheading"
          >
                     Height: undefined, Weight: undefined
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    style={
                              Object {
                                        "margin": 10,
                                      }
                    }
                    variant="subheading"
          >
                     Base experience: undefined
          </WithStyles(Typography)>
</WithStyles(CardContent)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              style={
                            Object {
                                          "margin": 10,
                                        }
              }
              variant="subheading"
>
               Height: undefined, Weight: undefined
</WithStyles(Typography)>,
            <WithStyles(Typography)
              style={
                            Object {
                                          "margin": 10,
                                        }
              }
              variant="subheading"
>
               Base experience: undefined
</WithStyles(Typography)>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": " Height: undefined, Weight: undefined",
              "style": Object {
                "margin": 10,
              },
              "variant": "subheading",
            },
            "ref": null,
            "rendered": " Height: undefined, Weight: undefined",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": " Base experience: undefined",
              "style": Object {
                "margin": 10,
              },
              "variant": "subheading",
            },
            "ref": null,
            "rendered": " Base experience: undefined",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
