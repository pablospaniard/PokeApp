// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PokemonsList_snapshot_1 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PokemonsList
    details={Object {}}
    err={null}
    loading={false}
    pokemons={
        Array [
            Object {
              "name": "blablabla",
              "url": "http",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Grid)>
          <WithStyles(ListItem)
                    onClick={[Function]}
          >
                    <Styled(WithStyles(ListItemText))
                              style={
                                        Object {
                                                  "cursor": "pointer",
                                                  "textAlign": "center",
                                                }
                              }
                    >
                              blablabla
                    </Styled(WithStyles(ListItemText))>
          </WithStyles(ListItem)>
</WithStyles(Grid)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ListItem)
              onClick={[Function]}
>
              <Styled(WithStyles(ListItemText))
                            style={
                                          Object {
                                                        "cursor": "pointer",
                                                        "textAlign": "center",
                                                      }
                            }
              >
                            blablabla
              </Styled(WithStyles(ListItemText))>
</WithStyles(ListItem)>,
            null,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(WithStyles(ListItemText))
                style={
                                Object {
                                                "cursor": "pointer",
                                                "textAlign": "center",
                                              }
                }
>
                blablabla
</Styled(WithStyles(ListItemText))>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "blablabla",
                "style": Object {
                  "cursor": "pointer",
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "blablabla",
              "type": [Function],
            },
            "type": [Function],
          },
          null,
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)>
            <WithStyles(ListItem)
                        onClick={[Function]}
            >
                        <Styled(WithStyles(ListItemText))
                                    style={
                                                Object {
                                                            "cursor": "pointer",
                                                            "textAlign": "center",
                                                          }
                                    }
                        >
                                    blablabla
                        </Styled(WithStyles(ListItemText))>
            </WithStyles(ListItem)>
</WithStyles(Grid)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ListItem)
                onClick={[Function]}
>
                <Styled(WithStyles(ListItemText))
                                style={
                                                Object {
                                                                "cursor": "pointer",
                                                                "textAlign": "center",
                                                              }
                                }
                >
                                blablabla
                </Styled(WithStyles(ListItemText))>
</WithStyles(ListItem)>,
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(WithStyles(ListItemText))
                  style={
                                    Object {
                                                      "cursor": "pointer",
                                                      "textAlign": "center",
                                                    }
                  }
>
                  blablabla
</Styled(WithStyles(ListItemText))>,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "blablabla",
                  "style": Object {
                    "cursor": "pointer",
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": "blablabla",
                "type": [Function],
              },
              "type": [Function],
            },
            null,
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
